1534843227.028757 client started (5055): version 2.7, socket /tmp//tmux-0/default, protocol 8
1534843227.028792 on Linux 3.10.0-862.9.1.el7.x86_64 #1 SMP Wed Jun 27 04:30:39 EDT 2018; libevent 2.0.21-stable (poll)
1534843227.028824 socket is /tmp//tmux-0/default
1534843227.028845 trying connect
1534843227.029491 add peer 0x20c8610: 6 ((nil))
1534843227.030222 sending message 100 to peer 0x20c8610 (4 bytes)
1534843227.030234 sending message 101 to peer 0x20c8610 (7 bytes)
1534843227.030240 sending message 102 to peer 0x20c8610 (12 bytes)
1534843227.030244 sending message 108 to peer 0x20c8610 (30 bytes)
1534843227.030250 sending message 104 to peer 0x20c8610 (0 bytes)
1534843227.030255 sending message 107 to peer 0x20c8610 (4 bytes)
1534843227.030260 sending message 105 to peer 0x20c8610 (11 bytes)
1534843227.030264 sending message 105 to peer 0x20c8610 (17 bytes)
1534843227.030270 sending message 105 to peer 0x20c8610 (30 bytes)
1534843227.030274 sending message 105 to peer 0x20c8610 (24 bytes)
1534843227.030279 sending message 105 to peer 0x20c8610 (12 bytes)
1534843227.030283 sending message 105 to peer 0x20c8610 (16 bytes)
1534843227.030287 sending message 105 to peer 0x20c8610 (14 bytes)
1534843227.030292 sending message 105 to peer 0x20c8610 (24 bytes)
1534843227.030296 sending message 105 to peer 0x20c8610 (32 bytes)
1534843227.030300 sending message 105 to peer 0x20c8610 (28 bytes)
1534843227.030304 sending message 105 to peer 0x20c8610 (10 bytes)
1534843227.030309 sending message 105 to peer 0x20c8610 (1436 bytes)
1534843227.030318 sending message 105 to peer 0x20c8610 (29 bytes)
1534843227.030322 sending message 105 to peer 0x20c8610 (34 bytes)
1534843227.030327 sending message 105 to peer 0x20c8610 (45 bytes)
1534843227.030331 sending message 105 to peer 0x20c8610 (184 bytes)
1534843227.030336 sending message 105 to peer 0x20c8610 (26 bytes)
1534843227.030340 sending message 105 to peer 0x20c8610 (34 bytes)
1534843227.030344 sending message 105 to peer 0x20c8610 (17 bytes)
1534843227.030349 sending message 105 to peer 0x20c8610 (13 bytes)
1534843227.030353 sending message 105 to peer 0x20c8610 (23 bytes)
1534843227.030357 sending message 105 to peer 0x20c8610 (13 bytes)
1534843227.030362 sending message 105 to peer 0x20c8610 (15 bytes)
1534843227.030366 sending message 105 to peer 0x20c8610 (51 bytes)
1534843227.030370 sending message 105 to peer 0x20c8610 (23 bytes)
1534843227.030375 sending message 105 to peer 0x20c8610 (15 bytes)
1534843227.030379 sending message 105 to peer 0x20c8610 (8 bytes)
1534843227.030383 sending message 105 to peer 0x20c8610 (11 bytes)
1534843227.030387 sending message 105 to peer 0x20c8610 (13 bytes)
1534843227.030392 sending message 105 to peer 0x20c8610 (28 bytes)
1534843227.030396 sending message 105 to peer 0x20c8610 (118 bytes)
1534843227.030400 sending message 105 to peer 0x20c8610 (35 bytes)
1534843227.030405 sending message 105 to peer 0x20c8610 (8 bytes)
1534843227.030414 sending message 105 to peer 0x20c8610 (11 bytes)
1534843227.030420 sending message 105 to peer 0x20c8610 (61 bytes)
1534843227.030424 sending message 105 to peer 0x20c8610 (24 bytes)
1534843227.030428 sending message 105 to peer 0x20c8610 (30 bytes)
1534843227.030433 sending message 105 to peer 0x20c8610 (22 bytes)
1534843227.030437 sending message 106 to peer 0x20c8610 (0 bytes)
1534843227.030443 sending message 200 to peer 0x20c8610 (4 bytes)
1534843227.030447 client loop enter
1534843227.031951 peer 0x20c8610 message 211
1534843227.031965 client_write: sessions should be nested with care, unset $TMUX to force\n
1534843227.031984 peer 0x20c8610 message 203
1534843227.031990 client loop exit
